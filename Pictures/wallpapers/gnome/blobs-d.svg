<?xml version="1.0" encoding="UTF-8"?>
<svg id="visual" width="4096" height="4096" version="1.1" viewBox="0 0 4096 4096" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
 <defs id="defs24901">
  <linearGradient id="linearGradient12826" x1="362.05" x2="3348.8" y1="4096" y2="747.16" gradientUnits="userSpaceOnUse">
   <stop id="stop12820" style="stop-color:#d64700" offset="0"/>
   <stop id="stop12822" style="stop-color:#301200" offset="1"/>
  </linearGradient>
  <meshgradient id="meshgradient14011" x="-380.63919" y="-369.27753" gradientTransform="matrix(.85764 0 0 .8461 326.45 312.4)" gradientUnits="userSpaceOnUse">
   <meshrow id="meshrow14013">
    <meshpatch id="meshpatch14015">
     <stop id="stop14017" style="stop-color:#26a269" path="c 1591.97,0  3183.95,0  4775.92,0"/>
     <stop id="stop14019" style="stop-color:#e01b24" path="c 0,1613.69  0,3227.38  0,4841.07"/>
     <stop id="stop14021" style="stop-color:#f6d32d" path="c -1591.97,0  -3183.95,0  -4775.92,0"/>
     <stop id="stop14023" style="stop-color:#813d9c" path="c 0,-1613.69  0,-3227.38  0,-4841.07"/>
    </meshpatch>
   </meshrow>
  </meshgradient>
 </defs>
 <g id="layer1">
  <rect id="rect24894" width="4096" height="4096" fill="#2ec27e" style="-inkscape-stroke:none;fill:#241f31;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path25008" d="m4096 2896.3c-244.6-26.2-489.2-52.4-749.6-98.7-260.5-46.3-536.8-112.7-693.4-298.3-156.6-185.5-193.3-490.1-396.2-660.1s-571.8-205.4-666.2-392.7 85.8-526.6 66.4-793c-19.3-266.4-238.3-459.9-457.3-653.5h2896.3z" fill="#00be8d" style="-inkscape-stroke:none;fill:#30223b;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path25010" d="m4096 2534.3c-214-22.9-428-45.9-655.9-86.4s-469.7-98.6-606.7-261c-137-162.3-169.2-428.9-346.7-577.6-177.5-148.8-500.4-179.7-582.9-343.6-82.6-163.9 75.1-460.8 58.1-693.9s-208.6-402.4-400.2-571.8h2534.3z" fill="#00b2ab" style="-inkscape-stroke:none;fill:#4e254a;font-variation-settings:normal;stop-color:#000000"/>
  <g id="g28351">
   <path id="path28341" d="m4096 2534.3c-214-22.9-428-45.9-655.9-86.4s-469.7-98.6-606.7-261c-137-162.3-169.2-428.9-346.7-577.6-177.5-148.8-500.4-179.7-582.9-343.6-82.6-163.9 75.1-460.8 58.1-693.9s-208.6-402.4-400.2-571.8h2534.3z" style="fill:#4e254a;stop-color:#000000;stroke-width:1px"/>
   <path id="path28343" d="m4096 2443.8c-206.35-22.08-412.72-44.25-632.47-83.31-219.78-39.04-452.93-95.07-585.03-251.67-132.12-156.5-163.15-413.58-334.32-556.97-171.15-143.48-482.53-173.28-562.11-331.33-79.62-158.05 72.43-444.35 56.05-669.12-16.4-224.78-201.15-388.02-385.9-551.38h2443.8z" style="fill:#56244b;stop-color:#000000;stroke-width:1px"/>
   <path id="path28345" d="m4096 2353.2c-198.7-21.25-397.45-42.6-609.05-80.2-211.65-37.6-436.15-91.55-563.35-242.35-127.25-150.7-157.1-398.25-321.95-536.35-164.8-138.15-464.65-166.85-541.3-319.05s69.75-427.9 54-644.35c-15.8-216.45-193.7-373.65-371.6-530.95h2353.2z" style="fill:#5f244c;stop-color:#000000;stroke-width:1px"/>
   <path id="path28347" d="m4096 2262.7c-191.05-20.42-382.18-40.95-585.62-77.1-203.53-36.15-419.38-88.02-541.68-233.02-122.38-144.9-151.05-382.93-309.58-515.73-158.44-132.82-446.77-160.42-520.49-306.77-73.68-146.35 67.07-411.45 51.95-619.58-15.2-208.12-186.25-359.28-357.3-510.52h2262.7z" style="fill:#67234d;stop-color:#000000;stroke-width:1px"/>
   <path id="path28349" d="m4096 2172.2c-183.4-19.6-366.9-39.3-562.2-74-195.4-34.7-402.6-84.5-520-223.7-117.5-139.1-145-367.6-297.2-495.1-152.1-127.5-428.9-154-499.7-294.5-70.7-140.5 64.4-395 49.9-594.8-14.6-199.8-178.8-344.9-343-490.1h2172.2z" style="fill:#70234e;stop-color:#000000;stroke-width:1px"/>
  </g>
  <path id="path25012" d="m4096 2172.2c-183.4-19.6-366.9-39.3-562.2-74-195.4-34.7-402.6-84.5-520-223.7-117.5-139.1-145-367.6-297.2-495.1-152.1-127.5-428.9-154-499.7-294.5-70.7-140.5 64.4-395 49.9-594.8-14.6-199.8-178.8-344.9-343-490.1h2172.2z" fill="#00a5c6" style="-inkscape-stroke:none;fill:#70234e;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path25014" d="m4096 1810.2c-152.9-16.4-305.7-32.7-468.5-61.7-162.8-28.9-335.5-70.4-433.4-186.4-97.8-116-120.8-306.4-247.6-412.6-126.8-106.3-357.4-128.4-416.4-245.4-59-117.1 53.7-329.1 41.5-495.7-12.1-166.5-148.9-287.4-285.8-408.4h1810.2z" fill="#0095d8" style="-inkscape-stroke:none;fill:#921f48;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path25016" d="m4096 1448.2c-122.3-13.1-244.6-26.2-374.8-49.4-130.2-23.1-268.4-56.4-346.7-149.1-78.3-92.8-96.7-245.1-198.1-330.1s-285.9-102.7-333.1-196.3c-47.2-93.7 42.9-263.3 33.2-396.5s-119.2-230-228.7-326.8h1448.2z" fill="#0081db" style="-inkscape-stroke:none;fill:#af2438;font-variation-settings:normal;stop-color:#000000"/>
  <g id="g29134">
   <path id="path29124" d="m4096 1448.2c-122.3-13.1-244.6-26.2-374.8-49.4-130.2-23.1-268.4-56.4-346.7-149.1-78.3-92.8-96.7-245.1-198.1-330.1s-285.9-102.7-333.1-196.3c-47.2-93.7 42.9-263.3 33.2-396.5s-119.2-230-228.7-326.8h1448.2z" style="fill:#af2438;stop-color:#000000;stroke-width:1px"/>
   <path id="path29126" d="m4096 1357.6c-114.65-12.28-229.3-24.55-351.38-46.3-122.07-21.68-251.62-52.88-325.02-139.78-73.4-87-90.65-229.8-185.72-309.47-95.08-79.7-268.03-96.276-312.28-184.05-44.25-87.825 40.23-246.82 31.12-371.7-9.1-124.87-111.74-215.62-214.39-306.37h1357.7z" style="fill:#b32931;stop-color:#000000;stroke-width:1px"/>
   <path id="path29128" d="m4096 1267.1c-107-11.44-214-22.9-327.95-43.2-113.95-20.25-234.85-49.35-303.35-130.45-68.5-81.19-84.6-214.5-173.35-288.84-88.75-74.4-250.15-89.85-291.45-171.8s37.55-230.35 29.05-346.9-104.3-201.25-200.1-285.95h1267.2z" style="fill:#b82e2a;stop-color:#000000;stroke-width:1px"/>
   <path id="path29130" d="m4096 1176.6c-99.35-10.62-198.7-21.25-304.53-40.1-105.82-18.82-218.07-45.82-281.67-121.12-63.6-75.403-78.55-199.2-160.97-268.23-82.43-69.1-232.28-83.425-270.63-159.55-38.35-76.075 34.87-213.88 26.98-322.1-7.9-108.22-96.86-186.87-185.8-265.52h1176.6z" style="fill:#bc3323;stop-color:#000000;stroke-width:1px"/>
   <path id="path29132" d="m4096 1086.1c-91.7-9.8-183.4-19.6-281.1-37s-201.3-42.3-260-111.8c-58.7-69.6-72.5-183.9-148.6-247.6-76.1-63.8-214.4-77-249.8-147.3-35.4-70.2 32.2-197.4 24.9-297.3s-89.4-172.5-171.5-245.1h1086.1z" style="fill:#c1381d;stop-color:#000000;stroke-width:1px"/>
  </g>
  <path id="path25018" d="m4096 1086.1c-91.7-9.8-183.4-19.6-281.1-37s-201.3-42.3-260-111.8c-58.7-69.6-72.5-183.9-148.6-247.6-76.1-63.8-214.4-77-249.8-147.3-35.4-70.2 32.2-197.4 24.9-297.3s-89.4-172.5-171.5-245.1h1086.1z" fill="#1569cd" style="-inkscape-stroke:none;fill:#c1381d;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path25020" d="m4096 724.1c-61.1-6.6-122.3-13.1-187.4-24.7s-134.2-28.2-173.3-74.6c-39.2-46.3-48.4-122.5-99.1-165s-143-51.3-166.6-98.2c-23.5-46.8 21.5-131.6 16.7-198.2-4.9-66.6-59.6-115-114.4-163.4h724.1z" fill="#6e4daf" style="-inkscape-stroke:none;fill:#c64600;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path25022" d="m4096 362c-30.6-3.2-61.1-6.5-93.7-12.3s-67.1-14.1-86.7-37.3c-19.5-23.2-24.1-61.3-49.5-82.5-25.4-21.3-71.5-25.7-83.3-49.1s10.8-65.8 8.3-99.1c-2.4-33.3-29.8-57.5-57.1-81.7h362z" fill="#813d9c" style="fill:#e66100"/>
  <path id="path26767" d="m0 1199.7c200.5 189.8 401 379.6 669.3 398.4 268.3 18.9 604.4-133.2 778.9-10.4 174.4 122.9 187.2 520.6 312.5 747.6s363 283.3 555.1 423.7c192 140.4 338.3 365.1 427.4 602 89.2 236.8 121.1 485.9 153.1 735h-2896.3z" style="fill:#30223b;stop-color:#000000;stroke-width:1px"/>
  <path id="path26769" d="m0 1320.4c192.13 181.9 384.3 363.8 641.4 381.83 257.13 18.07 579.23-127.67 746.43-9.97 167.17 117.74 179.44 498.9 299.5 716.44 120.07 217.53 347.9 271.46 531.97 406.03 184 134.57 324.2 349.9 409.6 576.9 85.47 226.97 116.07 465.67 146.73 704.4h-2775.6z" style="fill:#3a2340;stop-color:#000000;stroke-width:1px"/>
  <path id="path26771" d="m0 1441c183.77 174 367.6 348 613.5 365.27 245.97 17.23 554.07-122.13 713.97-9.53 159.93 112.56 171.66 477.2 286.5 685.26 114.83 208.07 332.8 259.64 508.83 388.37 176 128.73 310.1 334.7 391.8 551.8 81.73 217.13 111.03 445.43 140.37 673.8h-2655z" style="fill:#442445;stop-color:#000000;stroke-width:1px"/>
  <path id="path26769-9" d="m0 1320.4c200.86 181.9 401.77 363.8 670.55 381.83 268.82 18.07 605.55-127.67 780.35-9.97 174.77 117.74 187.59 498.9 313.11 716.44 125.53 217.53 363.71 271.46 556.15 406.03 192.36 134.57 338.93 349.9 428.22 576.9 89.354 226.97 121.35 465.67 153.4 704.4h-2901.8z" style="fill:#3a2340;stop-color:#000000;stroke-width:1.0225px"/>
  <path id="path26771-3" d="m0 1441c192.12 174 384.31 348 641.38 365.27 257.15 17.23 579.25-122.13 746.42-9.53 167.2 112.56 179.46 477.2 299.52 685.26 120.05 208.07 347.92 259.64 531.95 388.37 184 128.73 324.19 334.7 409.61 551.8 85.444 217.13 116.08 445.43 146.75 673.8h-2775.6z" style="fill:#442445;stop-color:#000000;stroke-width:1.0225px"/>
  <path id="path26773" d="m0 1561.7c175.4 166.1 350.9 332.2 585.6 348.7 234.8 16.4 528.9-116.6 681.5-9.1 152.7 107.4 163.9 455.5 273.5 654.1s317.7 247.8 485.7 370.7 296 319.5 374 526.7c78 207.3 106 425.2 134 643.2h-2534.3z" style="fill:#4e254a;stop-color:#000000;stroke-width:1px"/>
  <path id="path25028" d="m0 1561.7c175.4 166.1 350.9 332.2 585.6 348.7 234.8 16.4 528.9-116.6 681.5-9.1 152.7 107.4 163.9 455.5 273.5 654.1s317.7 247.8 485.7 370.7 296 319.5 374 526.7c78 207.3 106 425.2 134 643.2h-2534.3z" fill="#00b2ab" style="-inkscape-stroke:none;fill:#4e254a;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path25030" d="m0 1923.8c150.4 142.3 300.8 284.6 502 298.8 201.2 14.1 453.3-99.9 584.1-7.8 130.9 92.1 140.5 390.4 234.4 560.7 94 170.2 272.3 212.4 416.3 317.7 144 105.4 253.8 273.9 320.6 451.5 66.9 177.7 90.9 364.5 114.8 551.3h-2172.2z" fill="#00a5c6" style="-inkscape-stroke:none;fill:#70234e;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path27061" d="m0 1561.7c175.4 166.1 350.9 332.2 585.6 348.7 234.8 16.4 528.9-116.6 681.5-9.1 152.7 107.4 163.9 455.5 273.5 654.1s317.7 247.8 485.7 370.7 296 319.5 374 526.7c78 207.3 106 425.2 134 643.2h-2534.3z" style="fill:#4e254a;stop-color:#000000;stroke-width:1px"/>
  <path id="path27063" d="m0 1682.4c167.07 158.17 334.2 316.33 557.73 332.07 223.6 15.63 503.7-111.04 649.04-8.67 145.43 102.3 156.1 433.8 260.46 622.97 104.4 189.13 302.57 236 462.57 353.03 160 117.07 281.93 304.3 356.2 501.63 74.3 197.43 100.97 404.97 127.6 612.57h-2413.6z" style="fill:#59244b;stop-color:#000000;stroke-width:1px"/>
  <path id="path27065" d="m0 1803.1c158.73 150.23 317.5 300.47 529.87 315.43 212.4 14.87 478.5-105.46 616.56-8.23 138.17 97.2 148.3 412.1 247.44 591.83 99.2 179.67 287.43 224.2 439.43 335.37 152 111.23 267.87 289.1 338.4 476.57 70.6 187.57 95.93 384.73 121.2 581.93h-2292.9z" style="fill:#64234c;stop-color:#000000;stroke-width:1px"/>
  <path id="path27067" d="m0 1923.8c126.93 142.3 253.87 284.6 423.67 298.8 169.81 14.1 382.57-99.9 492.97-7.8 110.48 92.1 118.58 390.4 197.83 560.7 79.334 170.2 229.81 212.4 351.35 317.7 121.53 105.4 214.2 273.9 270.58 451.5 56.462 177.7 76.717 364.5 96.888 551.3h-1833.3z" style="fill:#70234e;stop-color:#000000;stroke-width:.91868px"/>
  <g id="g29900" transform="matrix(.92106 0 0 .94282 0 234.2)">
   <path id="path29884" d="m0 1923.8c126.93 142.3 253.87 284.6 423.68 298.8 169.81 14.1 382.57-99.9 492.96-7.8 110.48 92.1 118.58 390.4 197.83 560.7 79.33 170.2 229.81 212.4 351.34 317.7 121.54 105.4 214.2 273.9 270.58 451.5 56.46 177.7 76.72 364.5 96.89 551.3h-1833.3z" style="fill:#70234e;stop-color:#000000;stroke-width:.91868px"/>
   <path id="path29886" d="m0 1975.5c123.91 138.92 247.82 277.83 413.58 291.69 165.77 13.77 373.47-97.51 481.23-7.61 107.83 89.91 115.74 381.11 193.11 547.35 77.44 166.15 224.34 207.35 342.98 310.15 118.65 102.88 209.1 267.37 264.14 440.74 55.11 173.46 74.88 355.81 94.58 538.17h-1789.6z" style="fill:#74224d;stop-color:#000000;stroke-width:.91868px"/>
   <path id="path29888" d="m0 2027.2c120.88 135.53 241.76 271.06 403.49 284.57 161.73 13.44 364.37-95.13 469.5-7.43 105.2 87.73 112.91 371.83 188.4 534.02 75.55 162.08 218.87 202.28 334.62 302.58 115.76 100.37 204 260.84 257.7 429.99 53.76 169.21 73.05 347.13 92.28 525.04h-1746z" style="fill:#79214c;stop-color:#000000;stroke-width:.91868px"/>
   <path id="path29890" d="m0 2078.9c117.86 132.15 235.71 264.29 393.4 277.46 157.69 13.11 355.26-92.74 457.77-7.24 102.56 85.54 110.08 362.54 183.69 520.67 73.65 158.03 213.39 197.23 326.24 295.03 112.89 97.85 198.9 254.31 251.26 419.23 52.41 164.97 71.22 338.44 89.98 511.91h-1702.3z" style="fill:#7e214b;stop-color:#000000;stroke-width:.91868px"/>
   <path id="path29892" d="m0 2130.7c114.83 128.75 229.66 257.51 383.31 270.34 153.65 12.79 346.16-90.36 446.04-7.06 99.914 83.36 107.24 353.26 178.97 507.33 71.76 153.97 207.92 192.17 317.88 287.47 110 95.35 193.8 247.79 244.82 408.47 51.06 160.73 69.39 329.76 87.68 498.79h-1658.7z" style="fill:#83204a;stop-color:#000000;stroke-width:.91868px"/>
   <path id="path29894" d="m0 2182.4c111.8 125.37 223.6 250.74 373.22 263.23 149.61 12.46 337.06-87.97 434.31-6.87 97.274 81.17 104.41 343.97 174.26 493.98 69.867 149.92 202.45 187.12 309.51 279.92 107.13 92.83 188.7 241.26 238.39 397.71 49.71 156.49 67.55 321.07 85.37 485.66h-1615z" style="fill:#882049;stop-color:#000000;stroke-width:.91868px"/>
   <path id="path29896" d="m0 2234.1c108.78 121.98 217.55 243.97 363.13 256.11 145.57 12.13 327.96-85.59 422.58-6.69 94.634 78.99 101.58 334.69 169.54 480.65 67.974 145.85 196.97 182.05 301.14 272.35 104.24 90.32 183.6 234.73 231.95 386.96 48.36 152.24 65.72 312.39 83.07 472.53h-1571.4z" style="fill:#8d1f48;stop-color:#000000;stroke-width:.91868px"/>
   <path id="path29898" d="m0 2285.8c105.75 118.6 211.5 237.2 353.03 249 141.54 11.8 318.85-83.2 410.85-6.5 91.993 76.8 98.745 325.4 164.83 467.3 66.083 141.8 191.5 177 292.77 264.8 101.36 87.8 178.5 228.2 225.51 376.2s63.89 303.7 80.77 459.4h-1527.8z" style="fill:#921f48;stop-color:#000000;stroke-width:.91868px"/>
  </g>
  <path id="path25032" d="m0 2285.8c105.75 118.6 211.5 237.2 353.03 249 141.53 11.8 318.85-83.2 410.85-6.5 91.993 76.8 98.745 325.4 164.83 467.3 66.083 141.8 191.5 177 292.77 264.8 101.36 87.8 178.5 228.2 225.51 376.2 47.009 148 63.889 303.7 80.768 459.4h-1527.8z" fill="#0095d8" style="-inkscape-stroke:none;fill:#921f48;font-variation-settings:normal;stop-color:#000000;stroke-width:.91868"/>
  <path id="path27938" d="m0 2647.8c100.3 94.9 200.5 189.8 334.7 199.3 134.1 9.4 302.2-66.7 389.4-5.2 87.2 61.4 93.6 260.3 156.2 373.8 62.7 113.5 181.6 141.6 277.6 211.8s169.1 182.5 213.7 301c44.6 118.4 60.6 243 76.6 367.5h-1448.2z" style="fill:#af2438;stop-color:#000000;stroke-width:1px"/>
  <path id="path27940" d="m0 2738.3c94.025 88.97 187.98 177.92 313.78 186.82 125.72 8.82 283.3-62.53 365.08-4.87 81.75 57.57 87.75 244.02 146.45 350.42 58.75 106.42 170.22 132.78 260.23 198.58 90 65.825 158.55 171.1 200.35 282.2 41.79 111 56.79 227.8 71.79 344.52h-1357.7z" style="fill:#b32931;stop-color:#000000;stroke-width:1px"/>
  <path id="path27942" d="m0 2828.8c87.75 83.05 175.45 166.05 292.85 174.35 117.35 8.25 264.4-58.35 340.75-4.55 76.3 53.75 81.9 227.75 136.7 327.05 54.8 99.35 158.85 123.95 242.85 185.35 84 61.45 148 159.7 187 263.4 39 103.6 53 212.6 67 321.55h-1267.2z" style="fill:#b82e2a;stop-color:#000000;stroke-width:1px"/>
  <path id="path27944" d="m0 2919.4c81.475 77.12 162.92 154.17 271.92 161.87 108.98 7.67 245.5-54.17 316.42-4.23 70.85 49.93 76.05 211.48 126.95 303.68 50.85 92.275 147.48 115.12 225.48 172.12 77.995 57.075 137.44 148.3 173.64 244.6 36.2 96.2 49.2 197.4 62.2 298.58h-1176.6z" style="fill:#bc3323;stop-color:#000000;stroke-width:1px"/>
  <path id="path27946" d="m0 3009.9c75.2 71.2 150.4 142.3 251 149.4s226.6-50 292.1-3.9c65.4 46.1 70.2 195.2 117.2 280.3 46.9 85.2 136.1 106.3 208.1 158.9 72 52.7 126.9 136.9 160.3 225.8 33.4 88.8 45.4 182.2 57.4 275.6h-1086.1z" style="fill:#c1381d;stop-color:#000000;stroke-width:1px"/>
  <path id="path25038" d="m0 3371.9c50.1 47.5 100.3 94.9 167.3 99.6 67.1 4.7 151.1-33.3 194.7-2.6 43.7 30.7 46.9 130.2 78.2 186.9 31.3 56.8 90.7 70.8 138.7 105.9 48 35.2 84.6 91.3 106.9 150.5 22.3 59.3 30.3 121.5 38.3 183.8h-724.1z" fill="#6e4daf" style="-inkscape-stroke:none;fill:#c64600;font-variation-settings:normal;stop-color:#000000"/>
  <path id="path25040" d="m0 3734c25.1 23.7 50.1 47.4 83.7 49.8 33.5 2.3 75.5-16.7 97.3-1.3 21.8 15.3 23.4 65 39.1 93.4 15.6 28.4 45.4 35.4 69.4 53 24 17.5 42.3 45.6 53.4 75.2s15.1 60.8 19.1 91.9h-362z" fill="#813d9c" style="fill:#e66100"/>
  <path id="path27705" d="m0 3371.9c50.1 47.5 100.3 94.9 167.3 99.6 67.1 4.7 151.1-33.3 194.7-2.6 43.7 30.7 46.9 130.2 78.2 186.9 31.3 56.8 90.7 70.8 138.7 105.9 48 35.2 84.6 91.3 106.9 150.5 22.3 59.3 30.3 121.5 38.3 183.8h-724.1z" style="fill:#c64600;stop-color:#000000;stroke-width:1px"/>
  <path id="path27707" d="m0 3423.6c46.529 44.1 93.129 88.114 155.36 92.485 62.3 4.357 140.3-30.928 180.79-2.414 40.571 28.5 43.543 120.89 72.614 173.54 29.057 52.743 84.229 65.743 128.8 98.343 44.572 32.671 78.557 84.771 99.257 139.74 20.7 55.057 28.129 112.83 35.557 170.67h-672.37z" style="fill:#ca4900;stop-color:#000000;stroke-width:1px"/>
  <path id="path27709" d="m0 3475.4c42.957 40.7 85.957 81.329 143.41 85.372 57.5 4.014 129.5-28.558 166.87-2.229 37.443 26.3 40.185 111.57 67.028 160.19 26.815 48.685 77.757 60.685 118.9 90.785 41.143 30.143 72.515 78.243 91.615 128.99 19.1 50.814 25.957 104.16 32.814 157.54h-620.64z" style="fill:#cf4d00;stop-color:#000000;stroke-width:1px"/>
  <path id="path27711" d="m0 3527.1c39.386 37.3 78.786 74.543 131.47 78.257 52.7 3.671 118.7-26.186 152.96-2.043 34.314 24.1 36.828 102.26 61.442 146.83 24.572 44.628 71.286 55.628 109 83.228 37.715 27.614 66.472 71.714 83.972 118.23 17.5 46.571 23.786 95.485 30.071 144.41h-568.91z" style="fill:#d35100;stop-color:#000000;stroke-width:1px"/>
  <path id="path27713" d="m0 3578.8c35.814 33.9 71.614 67.757 119.53 71.143 47.9 3.329 107.9-23.814 139.04-1.857 31.186 21.9 33.472 92.943 55.858 133.47 22.328 40.572 64.814 50.572 99.1 75.672 34.285 25.086 60.428 65.186 76.328 107.47 15.9 42.329 21.614 86.815 27.329 131.29h-517.19z" style="fill:#d85500;stop-color:#000000;stroke-width:1px"/>
  <path id="path27715" d="m0 3630.5c32.243 30.5 64.443 60.971 107.59 64.028 43.1 2.986 97.1-21.442 125.13-1.671 28.057 19.7 30.115 83.629 50.272 120.11 20.085 36.515 58.343 45.515 89.2 68.115 30.857 22.557 54.385 58.657 68.685 96.714 14.3 38.086 19.443 78.143 24.586 118.16h-465.46z" style="fill:#dc5900;stop-color:#000000;stroke-width:1px"/>
  <path id="path27717" d="m0 3682.3c28.671 27.1 57.271 54.186 95.643 56.915 38.3 2.643 86.3-19.072 111.21-1.486 24.929 17.5 26.757 74.314 44.686 106.76 17.843 32.457 51.871 40.457 79.3 60.557 27.428 20.029 48.343 52.129 61.043 85.957 12.7 33.843 17.271 69.472 21.843 105.03h-413.73z" style="fill:#e15d00;stop-color:#000000;stroke-width:1px"/>
  <path id="path27719" d="m0 3734c25.1 23.7 50.1 47.4 83.7 49.8 33.5 2.3 75.5-16.7 97.3-1.3 21.8 15.3 23.4 65 39.1 93.4 15.6 28.4 45.4 35.4 69.4 53 24 17.5 42.3 45.6 53.4 75.2s15.1 60.8 19.1 91.9h-362z" style="fill:#e66100;stop-color:#000000;stroke-width:1px"/>
 </g>
 <g id="layer2" style="mix-blend-mode:multiply;opacity:.69844;stroke:url(#linearGradient12826)">
  <rect id="rect12758" x="5.6843e-14" y="-.05" width="4096" height="4096" style="-inkscape-stroke:none;fill:url(#meshgradient14011);stop-color:#000000;stroke:none"/>
 </g>
 <script id="mesh_polyfill" type="text/javascript">!function(){const t="http://www.w3.org/2000/svg",e="http://www.w3.org/1999/xlink",s="http://www.w3.org/1999/xhtml",r=2;if(document.createElementNS(t,"meshgradient").x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case"translate":2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error("mesh.js: translate does not have 2 arguments!"),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case"scale":1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error("mesh.js: scale does not have 1 or 2 arguments!"),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case"rotate":if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error("math.js: No argument to rotate transform!");3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case"skewX":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error("math.js: No argument to skewX transform!");break;case"skewY":l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error("math.js: No argument to skewY transform!");break;case"matrix":6===l.length?h=h.append(new g(...l)):console.error("math.js: Incorrect number of arguments for matrix!");break;default:console.error("mesh.js: Unhandled transform type: "+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error("mesh.js: argument to Affine.append is not affine!");let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute("type")||"bilinear"}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute("x")),n=Number(t.getAttribute("y"));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute("path"),c="l";null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case"l":0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"L":0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case"c":0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case"C":0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error("mesh.js: "+c+" invalid path type.")}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if("bilinear"===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll("rect,circle,ellipse,path,text").forEach((r,n)=&gt;{let o=r.getAttribute("id");o||(o="patchjs_shape"+n,r.setAttribute("id",o));const i=r.style.fill.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/),a=r.style.stroke.match(/^url\(\s*"?\s*#([^\s"]+)"?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;"meshgradient"===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,"canvas");d(l,{width:i.width,height:i.height});const c=l.getContext("2d");let u=c.createImageData(i.width,i.height);const f=new b(a);"objectBoundingBox"===a.getAttribute("gradientUnits")&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute("gradientTransform");null!=p&amp;&amp;f.transform(h(p)),"userSpaceOnUse"===a.getAttribute("gradientUnits")&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,"image");d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,"xlink:href",g),r.parentNode.insertBefore(y,r),r.style.fill="none";const w=document.createElementNS(t,"use");w.setAttributeNS(e,"xlink:href","#"+o);const m="patchjs_clip"+n,M=document.createElementNS(t,"clipPath");M.setAttribute("id",m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute("clip-path","url(#"+m+")"),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;"meshgradient"===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute("stroke-miterlimit"))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,"canvas");d(p,{width:l,height:c});const y=p.getContext("2d");let g=y.createImageData(l,c);const w=new b(o);"objectBoundingBox"===o.getAttribute("gradientUnits")&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute("gradientTransform");null!=m&amp;&amp;w.transform(h(m)),"userSpaceOnUse"===o.getAttribute("gradientUnits")&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,"image");d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,"xlink:href",S);const k="pattern_clip"+n,A=document.createElementNS(t,"pattern");d(A,{id:k,patternUnits:"userSpaceOnUse",width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke="url(#"+k+")",g=null,p=null,S=null}}})}();</script>
</svg>
